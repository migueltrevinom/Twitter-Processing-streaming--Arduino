/*
Twitter Streaming API/Processing
Remote Control Car

Based on http://forum.processing.org/two/discussion/1828/twitter-processing/p1
*/

import processing.serial.*;
Serial myPort;

// Oauth credentials
static String OAuthConsumerKey = "P9pEIlZlNjsMKEywX0PWQ";
static String OAuthConsumerSecret = "OhKqt04rQXYpu5ylfaUnQoG60MYC5u7CgLeA9KxHKQ";
static String AccessToken = "1465996698-p3c4P8QzOdVxXdCQYH0OXdvHD6CS3D8r6pOx2ot";
static String AccessTokenSecret = "9xOSt9Wey56QHbV9VwqSfoflUJgbVLnuXhsA9xsVO1EOs";
// Tags to search
String keywords[] = {"daledaleduro"};

TwitterStream twitter = new TwitterStreamFactory().getInstance();
import processing.serial.*;
//RMM import cc.arduino.*;
//RMM //Arduino arduino;
//RMM //int ledPin = 13;

void setup() {
  size(1, 1);

  //RMM //println(Arduino.list());
  //RMM //arduino = new Arduino(this, "/dev/tty.usbmodemfd131", 9600);
  //RMM //arduino.pinMode(ledPin, Arduino.OUTPUT);

  String portName = Serial.list()[1];              // get the first port
  println("portName: " + portName);
  myPort = new Serial(this, portName, 9600);

  connectTwitter();
  twitter.addListener(listener);
  if (keywords.length==0) twitter.sample();
  else twitter.filter(new FilterQuery().track(keywords));
}

void draw() {
  background(0);

}

// Initial connection
void connectTwitter() {
  twitter.setOAuthConsumer(OAuthConsumerKey, OAuthConsumerSecret);
  AccessToken accessToken = loadAccessToken();
  twitter.setOAuthAccessToken(accessToken);
}

// Loading up the access token
private static AccessToken loadAccessToken() {
  return new AccessToken(AccessToken, AccessTokenSecret);
}

// This listens for new tweet

StatusListener listener = new StatusListener() {
  //@Override
  public void onStatus(Status status) {
    println("@" + status.getUser().getScreenName() + " - " + status.getText());
    //delay(5000);
    myPort.write('1');
    delay(2000);
    myPort.write('2');
    delay(2000);
    myPort.write('3');
    delay(2000);
    myPort.write('4');
    delay(2000);
    
  }

  public void onDeletionNotice(StatusDeletionNotice statusDeletionNotice) {
    //System.out.println("Got a status deletion notice id:" + statusDeletionNotice.getStatusId());
  }
  public void onTrackLimitationNotice(int numberOfLimitedStatuses) {
    //  System.out.println("Got track limitation notice:" + numberOfLimitedStatuses);
  }
  public void onScrubGeo(long userId, long upToStatusId) {
    System.out.println("Got scrub_geo event userId:" + userId + " upToStatusId:" + upToStatusId);
  }
  @Override
  public void onStallWarning(StallWarning warning) {
    System.out.println("Got stall warning:" + warning);
  }
  public void onException(Exception ex) {
    ex.printStackTrace();
  }

};
